{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number';\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport format from '@stdlib/string-format';\n\n\n// VARIABLES //\n\nvar DEFAULT_LENGTH = 1e308;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns a sequence of numbers according to a specified increment.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} increment - increment\n* @param {number} [N=1e308] - number of values\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterStep( 0, 2, 10 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\nfunction iterStep( start, increment, N ) {\n\tvar iter;\n\tvar FLG;\n\tvar n;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( increment ) || isnan( increment ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', increment ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t} else {\n\t\tn = DEFAULT_LENGTH;\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': start + (i*increment),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStep( start, increment, n );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterStep;\n"],"names":["DEFAULT_LENGTH","iterStep","start","increment","N","iter","FLG","n","i","isNumber","isnan","TypeError","format","arguments","length","isNonNegativeInteger","setReadOnly","next","end","iteratorSymbol","factory","done","value"],"mappings":";;6mBAgCA,IAAIA,EAAiB,MA8BrB,SAASC,EAAUC,EAAOC,EAAWC,GACpC,IAAIC,EACAC,EACAC,EACAC,EAEJ,IAAMC,EAAUP,IAAWQ,EAAOR,GACjC,MAAM,IAAIS,UAAWC,EAAQ,kEAAmEV,IAEjG,IAAMO,EAAUN,IAAeO,EAAOP,GACrC,MAAM,IAAIQ,UAAWC,EAAQ,mEAAoET,IAElG,GAAKU,UAAUC,OAAS,EAAI,CAC3B,IAAMC,EAAsBX,GAC3B,MAAM,IAAIO,UAAWC,EAAQ,+EAAgFR,IAE9GG,EAAIH,CACN,MACEG,EAAIP,EAaL,OAXAQ,GAAK,EAILQ,EADAX,EAAO,CAAA,EACY,OAAQY,GAC3BD,EAAaX,EAAM,SAAUa,GAGxBC,GACJH,EAAaX,EAAMc,EAAgBC,GAE7Bf,EAQP,SAASY,IAER,OADAT,GAAK,EACAF,GAAOE,GAAKD,EACT,CACNc,MAAQ,GAGH,CACNC,MAASpB,EAASM,EAAEL,EACpBkB,MAAQ,EAET,CASD,SAASH,EAAKI,GAEb,OADAhB,GAAM,EACDO,UAAUC,OACP,CACNQ,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASD,IACR,OAAOnB,EAAUC,EAAOC,EAAWI,EACnC,CACF"}